# lr3.cfg
#
# How to use this file
# ====================
#
# This file defines the physical and operating characteristics of the MIT Land
# Lover LR3 used in the DARPA Urban Challenge.  It also defines the
# calibrations of the on-board sensors.
#
# The "body frame" of the vehicle is defined such that its origin lies at the
# base of the rear wheels at the center of the rear axle, the vehicle points
# along the positive X-axis, and positive Z corresponds to up.
#
# All sensor calibrations define the sensor-to-body transformation that brings
# coordinates from a sensor-relative coordinate frame into the body frame.
#
# Lengths are always given in meters.
#
# Rotations are given as roll-pitch-yaw in degrees.
#
# Unless noted, all other units are in SI

calibration {

# Bounds are specified in body coordinates (center of rear axle=origin)
    vehicle_bounds {
        front_left = [4.04,1.0];
        front_right = [4.04,-1.0];
        rear_left = [-1.36,1.0];
        rear_right = [-1.36,-1.0];
    }

    VELODYNE {
        position = [  1.56, -0.00408,  2.550000];
        rpy      = [  2.683627, -0.076601, 91.026067];
        relative_to = "body";
    }

    BROOM_C {
        position = [  2.013933,  0.047059,  2.100000];
        rpy      = [-179.138828, 23.745276,  0.060704];
        relative_to = "body";
    }

    BROOM_CL {
        position = [  1.819529,  0.375364,  2.100000];
        rpy      = [-178.709200,  8.355239,  0.440671];
        relative_to = "body";
    }

    BROOM_CR {
        position = [  1.901997, -0.399339,  2.100000];
        rpy      = [-179.963066, 12.068070,  0.750713];
        relative_to = "body";
    }

    BROOM_L {
        position = [  1.860818,  0.720426,  2.100000];
        rpy      = [-177.623234, 17.592725, 45.234690];
        relative_to = "body";
    }

    BROOM_R {
        position = [  1.779955, -0.506827,  2.100000];
        rpy      = [178.842287, 16.295419,-44.257785];
        relative_to = "body";
    }

    SKIRT_FC {
        position = [  3.852147,  0.048174,  0.870000];
        rpy      = [-180.830635,  2.685923, -0.962376];
        relative_to = "body";
    }

    SKIRT_FL {
        position = [  3.813821,  0.731976,  0.685000];
        rpy      = [-179.048230,  2.159054, 45.540754];
        relative_to = "body";
    }

    SKIRT_FR {
        position = [  3.812421, -0.701704,  0.520000];
        rpy      = [177.945370,  0.578049,-46.905670];
        relative_to = "body";
    }

    SKIRT_RC_HI {
        position = [ -.990800,  0.546515,  0.960000];
        rpy      = [180.491037, -2.433785,175.662131];
        relative_to = "body";
    }

    SKIRT_RC_LO {
        position = [ -1.061562,  0.148386,  0.490000];
        rpy      = [  0.306163, -2.863488,178.947666];
        relative_to = "body";
    }

    SKIRT_RL {
        position = [ -0.523749,  1.018553,  0.530000];
        rpy      = [  2.204727, -0.874988, 94.712140];
        relative_to = "body";
    }

    SKIRT_RR {
        position = [ -0.525306, -0.788682,  0.540000];
        rpy      = [ -1.890840, -2.421132,-96.142552];
        relative_to = "body";
    }

# Camera calibration:
#
# Perspective projection matrix is defined by the pinhole array:
#
# fx   = pinhole[0]
# fy   = pinhole[1]
# skew = pinhole[2]
# cx   = pinhole[3]
# cy   = pinhole[4]
#
# M = [ fx  skew  cx  ;
#       0   fy    cy  ;
#       0   0     1   ];
    cameras {
        cam_roof_fc {
            width = 752;
            height = 480;
            distortion_model = "spherical";
            distortion_center = [-0.020410,0.033517];
            distortion_params = [1.074213];
            pinhole = [479.867758,479.867758,0.000000,360.036957,267.139665];
            position = [2.0, 0.10, 1.87];
            rpy = [-92.732548686299864, 1.5247112920413703, -88.947474213001513];
            relative_to = "body";
        }

        cam_roof_fl {
            width = 752;
            height = 480;
            distortion_model = "spherical";
            distortion_center = [-0.021519,-0.031968];
            distortion_params = [1.072291];
            pinhole = [479.567636,479.567636,0.000000,359.563721,216.757192];
            position = [1.70, 0.66, 1.83];
            rpy = [-104.85977729830938, 1.7669342713597069, -24.369926193961831];
            relative_to = "body";
        }

        cam_roof_fr {
            width = 752;
            height = 480;
            distortion_model = "spherical";
            distortion_center = [0.011822,-0.039534];
            distortion_params = [1.071786];
            pinhole = [482.093010,482.093010,0.000000,384.128030,211.236693];
            position = [1.60, -0.66, 1.83];
            rpy = [-104.67989704943309, -1.6346433362446215, -154.50843893511401];
            relative_to = "body";
        }
        cam_roof_rc {
            width = 752;
            height = 480;
            distortion_model = "spherical";
            distortion_center = [-0.05616908,-0.005963998];
            distortion_params = [1.085173436];
            pinhole = [473.1791,473.1791,0.0000,333.0504,237.5875];
            position = [-0.72, 0.58, 1.87];
            rpy = [-87.556890981409339, 0.20153392228877995, 90.018251146632338];
            relative_to = "body";
        }

        cam_roof_fc_6mm {
            width = 752;
            height = 480;
            distortion_model = "spherical";
            distortion_center = [-0.001310066976,-0.01458390567];
            distortion_params = [0.68462101929529];
            pinhole = [1024.920603,1024.920603,0.000000,373.788212,233.819293];
            position = [2.0, 0.10, 1.87];
            rpy = [-92.994985165680859, 1.8089691922136495, -89.480172060729586];
            relative_to = "body";
        }
    }

    imu {
        serial_number = 1;
        body_frame {
            rpy = [-3.8825651268184495e-19, -0.29678863022527135, 0.90004751272067207];
            position = [-0.8, 0, 0.9];
        }
    }

    gps {
        body_frame {
            position = [-0.8, 0, 0.9];
        }
        # Victorville from cors station:
        nad83_offset = [ 4.46e-6, -1.15e-5, -0.729];
    }

}

# this block stores all camera configuration params except for calibration
cameras {
    #Roof front center
    cam_roof_fc {
        uid = "0xb09d010062bd06";
        thumbnail_channel = "CAM_THUMB_RFC";
        image_url_channel = "CAM_URL_RFC";
        full_frame_channel = "CAM_FRAME_RFC";
        short_name = "RFC";
        vehicle_body = [ 147, 479,
                         147, 445,
                         202, 408,
                         568, 396,
                         621, 426,
                         621, 479 ];
    }

    #Roof front left
    cam_roof_fl {
        uid = "0xb09d010062bce5";
        thumbnail_channel = "CAM_THUMB_RFL";
        image_url_channel = "CAM_URL_RFL";
        full_frame_channel = "CAM_FRAME_RFL";
        short_name = "RFL";
        vehicle_body = [ 0, 139,
                     83, 136,
                     102, 23,
                     0, 23 ];
    }

    #Roof front right
    cam_roof_fr {
        uid = "0xb09d010062bcdc";
        thumbnail_channel = "CAM_THUMB_RFR";
        image_url_channel = "CAM_URL_RFR";
        full_frame_channel = "CAM_FRAME_RFR";
        short_name = "RFR";
        vehicle_body = [ 0, 225,
                     100, 191,
                     90, 99,
                     0, 99 ];
    }

    #Roof rear center
    cam_roof_rc {
        uid = "0xb09d010062bd0a";
        thumbnail_channel = "CAM_THUMB_RRC";
        image_url_channel = "CAM_URL_RRC";
        full_frame_channel = "CAM_FRAME_RRC";
        short_name = "RRC";
    }

    cam_roof_fc_6mm {
        uid = "0xb09d010062bce9";
            thumbnail_channel = "CAM_THUMB_RFC_6mm";
            image_url_channel = "CAM_URL_RFC_6mm";
            full_frame_channel = "CAM_FRAME_RFC_6mm";
            short_name = "RFC6";
        }
}

vehicle {
      ############################################
      # car physical characteristics

      max_turn_rate_rad = 0.2094;   # tan(0.5435) / 2.885

      # maximum STEER radians is different, and can be computed
      # as max_steer_rate_rad = atan(max_turn_rate_rad * wheel_base)

      wheel_base = 2.885;         # front to back distance
      wheel_width = 1.605;        # distance between left and right wheels
      rear_axle_to_nose = 3.8;    # distance from rear axle to nose of car
      overall_width = 2.0; # 2.0
      overall_length = 4.9;

      #############################################
      # EMC characteristics

      gas_none_mv = 3400;
      gas_full_mv = 3900;

      brake_none_mv = 1750;
      brake_full_mv = 1350;

      steer_left_mv = 200;
      steer_center_mv = 2440;
      steer_right_mv = 4600;

      steer_time = 3.75;           # how many seconds does it take to go from full left to full right
      gas_brake_time = .5;         # how many seconds to go from full gas to full brake?
}
